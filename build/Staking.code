.version sol 0.61.2

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 57
ACCEPT
.loc ../contracts/Staking.tsol, 58
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 59
PUSH S2
SETGLOB 13
.loc ../contracts/Staking.tsol, 60
SWAP
SETGLOB 15
.loc ../contracts/Staking.tsol, 61
PUSHINT 0
SETGLOB 18
.loc ../contracts/Staking.tsol, 62
PUSHINT 0
SETGLOB 19
.loc ../contracts/Staking.tsol, 63
GETGLOB 9
SETGLOB 12
.loc ../contracts/Staking.tsol, 64
PUSHINT 100000000
MYADDR
ROLL 3
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2820045005182170565370280386138670788247553
STUR 143
ROTREV
PUSHSLICE x31edd4c749b2f6d7
NEWC
STSLICE
STSLICE
STU 128
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/Staking.tsol, 72
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 74
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $onTokenWallet_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWallet_internal_macro
.loc ../contracts/Staking.tsol, 75
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 13
SDEQ
AND
THROWIFNOT 101
.loc ../contracts/Staking.tsol, 80
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 81
SETGLOB 14
.loc ../contracts/Staking.tsol, 82
GETGLOB 11
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Staking.tsol, 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 84
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_internal_macro
.loc ../contracts/Staking.tsol, 92
BLKDROP 3
GETGLOB 9
GETGLOB 14
SDEQ
THROWIFNOT 108
.loc ../contracts/Staking.tsol, 93
PUSHINT 200000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 94
GETGLOB 18
PUSH S2
ADD
UFITS 128
SETGLOB 18
.loc ../contracts/Staking.tsol, 95
DUP
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
FIRST
PUSHCONT {
	.loc ../contracts/Staking.tsol, 96
	DUP
	GETGLOB 17
	DUP2
	PUSHINT 267
	DICTGET
IFREFELSEREF
{
		LDU 128
		LDU 128
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 128
		LDU 128
		ENDS
		TUPLE 5
}
{
		PUSHINT 0
		BLKPUSH 2, 0
		NEWDICT
		PAIR
		PUSHINT 0
		DUP
		TUPLE 5
}
	NOW
	SETINDEX 4
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STU 128
		STU 128
		SWAP
		UNPAIR
		XCHG S2
		STU 32
		STDICT
		STU 128
		STU 128
	}
	ROTREV
	PUSHINT 267
	DICTSETB
	DUP
	SETGLOB 17
	.loc ../contracts/Staking.tsol, 97
	PUXC S1, S-1
	DUP2
	PUSHINT 267
	DICTGET
IFREFELSEREF
{
		LDU 128
		LDU 128
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 128
		LDU 128
		ENDS
		TUPLE 5
}
{
		PUSHINT 0
		BLKPUSH 2, 0
		NEWDICT
		PAIR
		PUSHINT 0
		DUP
		TUPLE 5
}
	NOW
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STU 128
		STU 128
		SWAP
		UNPAIR
		XCHG S2
		STU 32
		STDICT
		STU 128
		STU 128
	}
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 17
	.loc ../contracts/Staking.tsol, 0
}
IFNOT
.loc ../contracts/Staking.tsol, 99
DUP2
GETGLOB 17
DUP2
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
DUP
FIRST
ROLL 4
ADD
UFITS 128
SETINDEX 0
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 128
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 128
	STU 128
}
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
.loc ../contracts/Staking.tsol, 100
GETGLOB 9
SETGLOB 16
.loc ../contracts/Staking.tsol, 102
DUP
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
SECOND
ROTREV
PUSHSLICE xc000000000000000000000000034e978e5
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
DROP
.loc ../contracts/Staking.tsol, 0

.macro onNftTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 105
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $onNftTransfer_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onNftTransfer_internal_macro
.loc ../contracts/Staking.tsol, 117
BLKDROP 6
PUSHINT 200000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 118
DUP
GETGLOB 17
DUP2
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
DUP
THIRD
GETGLOB 9
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSET
PAIR
SETINDEX 2
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 128
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 128
	STU 128
}
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
.loc ../contracts/Staking.tsol, 119
DUP
SETGLOB 21
.loc ../contracts/Staking.tsol, 120
GETGLOB 19
INC
UFITS 128
SETGLOB 19
.loc ../contracts/Staking.tsol, 121
DUP
GETGLOB 9
GETGLOB 20
PUSHINT 267
DICTSET
SETGLOB 20
.loc ../contracts/Staking.tsol, 122
NOW
GETGLOB 9
ROT
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 3
NEWC
STSLICECONST x10327266
STSLICE
ROTREV
NEWC
STSLICE
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP
.loc ../contracts/Staking.tsol, 0

.macro getRewardAmount
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 125
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $getRewardAmount_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3232086725
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getRewardAmount_internal_macro
.loc ../contracts/Staking.tsol, 126
NOW
OVER
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
SECOND
SUB
UFITS 128
.loc ../contracts/Staking.tsol, 127
PUSHINT 50
PUSH2 S0, S2
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
INDEX2 2, 0
MUL
ADD
UFITS 128
.loc ../contracts/Staking.tsol, 128
ROT
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
FIRST
MUL
UFITS 128
MUL
UFITS 128
PUSHINT 100
DIV
PUSHINT 31536000
DIV
.loc ../contracts/Staking.tsol, 0

.macro claim
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 132
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $claim_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro claim_internal_macro
.loc ../contracts/Staking.tsol, 133
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
FIRST
GTINT 0
THROWIFNOT 102
.loc ../contracts/Staking.tsol, 134
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 136
NOW
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
SECOND
SUB
UFITS 128
.loc ../contracts/Staking.tsol, 137
PUSHINT 50
DUP
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
INDEX2 2, 0
MUL
ADD
UFITS 128
.loc ../contracts/Staking.tsol, 138
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
FIRST
MUL
UFITS 128
MUL
UFITS 128
PUSHINT 100
DIV
PUSHINT 31536000
DIV
.loc ../contracts/Staking.tsol, 140
PUSHREF {
}
FALSE
GETGLOB 9
PUSHINT 100000000
GETGLOB 9
PUSH S5
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 6
NEWC
STSLICECONST x73e22143
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Staking.tsol, 141
DUP
GETGLOB 9
GETGLOB 17
DUP2
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
DUP
INDEX 3
ROLL 4
ADD
UFITS 128
SETINDEX 3
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 128
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 128
	STU 128
}
ROTREV
PUSHINT 267
DICTSETB
DUP
SETGLOB 17
.loc ../contracts/Staking.tsol, 142
GETGLOB 9
TUCK
OVER
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
NOW
SETINDEX 1
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 128
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 128
	STU 128
}
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
.loc ../contracts/Staking.tsol, 143
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
SECOND
SWAP
GETGLOB 9
PUSHSLICE xc000000000000000000000000027879aab
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Staking.tsol, 0

.macro unstakable
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 146
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $unstakable_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2675213143
	STUR 130
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro unstakable_internal_macro
.loc ../contracts/Staking.tsol, 147
NOW
OVER
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
INDEX 4
PUSHINT 604800
ADD
UFITS 128
GEQ
DUP
PUSHCONT {
	DROP
	DUP
	GETGLOB 17
	PUSHINT 267
	DICTGET
IFREFELSEREF
{
		LDU 128
		LDU 128
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 128
		LDU 128
		ENDS
		TUPLE 5
}
{
		PUSHINT 0
		BLKPUSH 2, 0
		NEWDICT
		PAIR
		PUSHINT 0
		DUP
		TUPLE 5
}
	FIRST
	GTINT 0
}
IF
NIP
.loc ../contracts/Staking.tsol, 0

.macro unstake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 150
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $unstake_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro unstake_internal_macro
.loc ../contracts/Staking.tsol, 151
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
FIRST
OVER
GEQ
THROWIFNOT 105
.loc ../contracts/Staking.tsol, 152
GETGLOB 9
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
INDEX 4
PUSHINT 604800
ADD
UFITS 128
NOW
LEQ
THROWIFNOT 103
.loc ../contracts/Staking.tsol, 153
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 154
PUSHREF {
}
.loc ../contracts/Staking.tsol, 155
FALSE
GETGLOB 9
PUSHINT 100000000
GETGLOB 9
PUSH S5
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 6
NEWC
STSLICECONST x73e22143
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Staking.tsol, 156
DUP
GETGLOB 9
GETGLOB 17
DUP2
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
DUP
FIRST
ROLL 4
SUB
UFITS 128
SETINDEX 0
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STU 128
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 128
	STU 128
}
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
.loc ../contracts/Staking.tsol, 157
GETGLOB 18
OVER
SUB
UFITS 128
SETGLOB 18
.loc ../contracts/Staking.tsol, 158
NOW
SWAP
GETGLOB 9
PUSHSLICE xc00000000000000000000000003a4cae0d
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Staking.tsol, 0

.macro withdraw
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 161
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $withdraw_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro withdraw_internal_macro
.loc ../contracts/Staking.tsol, 162
GETGLOB 9
GETGLOB 12
SDEQ
THROWIFNOT 110
.loc ../contracts/Staking.tsol, 163
PUSHREF {
}
.loc ../contracts/Staking.tsol, 164
FALSE
GETGLOB 9
PUSHINT 100000000
GETGLOB 9
PUSH S5
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 6
NEWC
STSLICECONST x73e22143
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Staking.tsol, 165
NOW
SWAP
GETGLOB 9
PUSHSLICE xc00000000000000000000000006e8d6d34
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Staking.tsol, 0

.macro unstakeNFT
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 168
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $unstakeNFT_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro unstakeNFT_internal_macro
.loc ../contracts/Staking.tsol, 169
DUP
GETGLOB 20
PUSHINT 267
DICTGET
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
IFNOT
GETGLOB 9
SDEQ
THROWIFNOT 106
.loc ../contracts/Staking.tsol, 170
PUSHINT 200000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/Staking.tsol, 172
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 9
	GETGLOB 17
	PUSHINT 267
	DICTGET
IFREFELSEREF
{
		LDU 128
		LDU 128
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 128
		LDU 128
		ENDS
		TUPLE 5
}
{
		PUSHINT 0
		BLKPUSH 2, 0
		NEWDICT
		PAIR
		PUSHINT 0
		DUP
		TUPLE 5
}
	INDEX2 2, 0
	LESS
}
PUSHCONT {
	.loc ../contracts/Staking.tsol, 173
	DUP
	GETGLOB 9
	GETGLOB 17
	PUSHINT 267
	DICTGET
IFREFELSEREF
{
		LDU 128
		LDU 128
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 128
		LDU 128
		ENDS
		TUPLE 5
}
{
		PUSHINT 0
		BLKPUSH 2, 0
		NEWDICT
		PAIR
		PUSHINT 0
		DUP
		TUPLE 5
}
	INDEX2 2, 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PUSH S2
	SDEQ
	PUSHCONT {
		.loc ../contracts/Staking.tsol, 174
		GETGLOB 9
		GETGLOB 17
		PUSHINT 267
		DICTGET
IFREFELSEREF
{
			LDU 128
			LDU 128
			LDU 32
			LDDICT
			ROTREV
			PAIR
			SWAP
			LDU 128
			LDU 128
			ENDS
			TUPLE 5
}
{
			PUSHINT 0
			BLKPUSH 2, 0
			NEWDICT
			PAIR
			PUSHINT 0
			DUP
			TUPLE 5
}
		INDEX2 2, 0
		DEC
		UFITS 256
		GETGLOB 9
		GETGLOB 17
		PUSHINT 267
		DICTGET
IFREFELSEREF
{
			LDU 128
			LDU 128
			LDU 32
			LDDICT
			ROTREV
			PAIR
			SWAP
			LDU 128
			LDU 128
			ENDS
			TUPLE 5
}
{
			PUSHINT 0
			BLKPUSH 2, 0
			NEWDICT
			PAIR
			PUSHINT 0
			DUP
			TUPLE 5
}
		INDEX2 2, 1
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		GETGLOB 9
		GETGLOB 17
		DUP2
		PUSHINT 267
		DICTGET
IFREFELSEREF
{
			LDU 128
			LDU 128
			LDU 32
			LDDICT
			ROTREV
			PAIR
			SWAP
			LDU 128
			LDU 128
			ENDS
			TUPLE 5
}
{
			PUSHINT 0
			BLKPUSH 2, 0
			NEWDICT
			PAIR
			PUSHINT 0
			DUP
			TUPLE 5
}
		DUP
		THIRD
		UNPAIR
		PUXC S6, S-1
		PUSH2 S1, S2
		LESS
		THROWIFNOT 50
		ROLL 6
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		SETINDEX 2
		CALLREF {
			UNTUPLE 5
			REVERSE 5, 0
			NEWC
			STU 128
			STU 128
			SWAP
			UNPAIR
			XCHG S2
			STU 32
			STDICT
			STU 128
			STU 128
		}
		ROTREV
		PUSHINT 267
		DICTSETB
		DUP
		SETGLOB 17
		.loc ../contracts/Staking.tsol, 175
		GETGLOB 9
		TUCK
		OVER
		PUSHINT 267
		DICTGET
IFREFELSEREF
{
			LDU 128
			LDU 128
			LDU 32
			LDDICT
			ROTREV
			PAIR
			SWAP
			LDU 128
			LDU 128
			ENDS
			TUPLE 5
}
{
			PUSHINT 0
			BLKPUSH 2, 0
			NEWDICT
			PAIR
			PUSHINT 0
			DUP
			TUPLE 5
}
		DUP
		THIRD
		UNPAIR
		OVER
		THROWIFNOT 54
		SWAP
		DEC
		DUP
		ROT
		PUSHINT 32
		DICTUDEL
		DROP
		PAIR
		SETINDEX 2
		CALLREF {
			UNTUPLE 5
			REVERSE 5, 0
			NEWC
			STU 128
			STU 128
			SWAP
			UNPAIR
			XCHG S2
			STU 32
			STDICT
			STU 128
			STU 128
		}
		ROTREV
		PUSHINT 267
		DICTSETB
		SETGLOB 17
		.loc ../contracts/Staking.tsol, 0
	}
	IF
	.loc ../contracts/Staking.tsol, 172
	INC
	.loc ../contracts/Staking.tsol, 0
}
WHILE
DROP
.loc ../contracts/Staking.tsol, 179
NEWDICT
.loc ../contracts/Staking.tsol, 181
GETGLOB 9
PUSH S2
GETGLOB 20
PUSHINT 267
DICTGET
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
IFNOT
PUSH S3
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 3
NEWC
STSLICECONST x11dd9e92
STSLICE
ROTREV
NEWC
STSLICE
STDICT
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Staking.tsol, 191
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
OVER
GETGLOB 20
PUSHINT 267
DICTSET
SETGLOB 20
.loc ../contracts/Staking.tsol, 192
NOW
SWAP
GETGLOB 9
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 3
NEWC
STSLICECONST x0aaef3ea
STSLICE
ROTREV
NEWC
STSLICE
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Staking.tsol, 0

.macro getAPY
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 195
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $getAPY_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3517697909
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getAPY_internal_macro
.loc ../contracts/Staking.tsol, 196
PUSHINT 50
DUP
ROT
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
INDEX2 2, 0
MUL
ADD
UFITS 128
.loc ../contracts/Staking.tsol, 0

.macro getStakedInfo
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Staking.tsol, 199
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/Staking.tsol, 0
CALLREF {
	CALL $getStakedInfo_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xbeb98008
	SWAP
	UNTUPLE 5
	REVERSE 6, 0
	STU 128
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 128
	STU 128
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getStakedInfo_internal_macro
.loc ../contracts/Staking.tsol, 200
GETGLOB 17
PUSHINT 267
DICTGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 128
	LDU 128
	ENDS
	TUPLE 5
}
{
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHINT 0
	DUP
	TUPLE 5
}
.loc ../contracts/Staking.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 16
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDDICT
LDU 128
LDU 128
LDDICT
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 16
	}
	IF
	PUSHINT 2
	PUSH S2
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 4, 0
	NEWDICT
	PUSHINT 0
	DUP
	NEWDICT
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 16
STSLICE
ROLLREV 10
NEWC
STSLICE
ROLLREV 9
NEWC
STSLICE
ROLLREV 8
NEWC
STSLICE
ROLLREV 7
NEWC
STSLICE
ROLLREV 6
NEWC
STSLICE
STDICT
STU 128
STU 128
STDICT
SWAP
NEWC
STSLICE
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro adminWallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000f83eef5d
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _stakingTokenRoot
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cd7e71c3
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _stakingTokenWallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b6d447f0
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _stakingNFTRoot
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e54afb82
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro forTest
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b7d04b3d
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro stakes
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d808e7d8
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro totalStakedAmount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000988c6885
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro totalStakedNftCount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d2145625
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro NftToStaker
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 20
OVER
PUSHCONT {
	PUSHSLICE xc000000000000000000000000086a33b2d
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro nftSender
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
OVER
PUSHCONT {
	PUSHSLICE xc000000000000000000000000094441b7d
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 1377064485
LEQ
IFJMPREF {
	DUP
	PUSHINT 411854981
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 111360813
		EQUAL
		IFJMPREF {
			CALL $NftToStaker$
		}
		DUP
		PUSHINT 313391878
		EQUAL
		IFJMPREF {
			CALL $withdraw$
		}
		DUP
		PUSHINT 340007805
		EQUAL
		IFJMPREF {
			CALL $nftSender$
		}
		DUP
		PUSHINT 411854981
		EQUAL
		IFJMPREF {
			CALL $totalStakedAmount$
		}
	}
	DUP
	PUSHINT 936397629
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 527729495
		EQUAL
		IFJMPREF {
			CALL $unstakable$
		}
		DUP
		PUSHINT 760070773
		EQUAL
		IFJMPREF {
			CALL $unstake$
		}
		DUP
		PUSHINT 919881712
		EQUAL
		IFJMPREF {
			CALL $_stakingTokenWallet$
		}
		DUP
		PUSHINT 936397629
		EQUAL
		IFJMPREF {
			CALL $forTest$
		}
	}
	DUP
	PUSHINT 1120219248
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1052344328
		EQUAL
		IFJMPREF {
			CALL $getStakedInfo$
		}
		DUP
		PUSHINT 1084603077
		EQUAL
		IFJMPREF {
			CALL $getRewardAmount$
		}
		DUP
		PUSHINT 1100603427
		EQUAL
		IFJMPREF {
			CALL $unstakeNFT$
		}
		DUP
		PUSHINT 1120219248
		EQUAL
		IFJMPREF {
			CALL $claim$
		}
	}
	DUP
	PUSHINT 1377064485
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1236465367
		EQUAL
		IFJMPREF {
			CALL $onTokenWallet$
		}
		DUP
		PUSHINT 1300132291
		EQUAL
		IFJMPREF {
			CALL $_stakingTokenRoot$
		}
		DUP
		PUSHINT 1370214261
		EQUAL
		IFJMPREF {
			CALL $getAPY$
		}
		DUP
		PUSHINT 1377064485
		EQUAL
		IFJMPREF {
			CALL $totalStakedNftCount$
		}
	}
}
DUP
PUSHINT 2087248313
LEQ
IFJMPREF {
	DUP
	PUSHINT 1893244873
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1476978648
		EQUAL
		IFJMPREF {
			CALL $stakes$
		}
		DUP
		PUSHINT 1699412866
		EQUAL
		IFJMPREF {
			CALL $_stakingNFTRoot$
		}
		DUP
		PUSHINT 1824563769
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1893244873
		EQUAL
		IFJMPREF {
			CALL $onAcceptTokensTransfer$
		}
	}
	DUP
	PUSHINT 2087248313
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 2017390429
		EQUAL
		IFJMPREF {
			CALL $adminWallet$
		}
		DUP
		PUSHINT 2087248313
		EQUAL
		IFJMPREF {
			CALL $onNftTransfer$
		}
	}
}

